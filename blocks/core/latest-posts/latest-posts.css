.wp-block-latest-posts {
  padding: 0 !important;
  margin: 0;
}
.wp-block-latest-posts__list {
  display: block !important;
  flex-wrap: nowrap !important;
  margin: 0 !important;
}
.has-fullwidth-background .wp-block-latest-posts__list {
  background: transparent !important;
}
.wp-block-latest-posts__list > li {
  margin: 0;
  box-sizing: border-box;
  width: 100% !important;
}
@media (min-width: 768px) {
  .wp-block-latest-posts__list.columns-2, .wp-block-latest-posts__list.columns-3 {
    display: grid !important;
    grid-gap: 0.5rem;
  }
}
@media (min-width: 992px) {
  .wp-block-latest-posts__list.columns-2, .wp-block-latest-posts__list.columns-3 {
    grid-gap: 1rem;
  }
}
@media (min-width: 768px) {
  .wp-block-latest-posts__list.columns-2 {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (min-width: 992px) {
  .wp-block-latest-posts__list.columns-3 {
    grid-template-columns: repeat(3, 1fr);
  }
}
.wp-block-latest-posts__post-title {
  font-weight: bold;
  font-size: 1.2rem;
  transition: all 0.3s ease;
}
.wp-block-latest-posts__post-title:before {
  display: none;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
